"""
Django settings for newwinetraining project.

Generated by 'django-admin startproject' using Django 3.2.

For more information on this file, see
https://docs.djangoproject.com/en/3.2/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/3.2/ref/settings/
"""

from pathlib import Path

import environ

# Initialise environment variables
env = environ.Env()
environ.Env.read_env()

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/3.2/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = env('SECRET_KEY')

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = env('DEBUG')
#DEBUG = False

ALLOWED_HOSTS = env('ALLOWED_HOSTS')
#ALLOWED_HOSTS = []

# Application definition

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',

    #third party apps
    'phonenumber_field',
    'iommi',

    #own apps
    'languages',
    'trainings',
    'users',
    'pages',
]

try:
    import django_fastdev
except ImportError:
    pass
else:
    INSTALLED_APPS += ['django_fastdev']

MIDDLEWARE = [
    'iommi.live_edit.Middleware', #Must be first in the list

    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',

    'iommi.sql_trace.Middleware',
    'iommi.profiling.Middleware',
    'iommi.middleware', #must be last in the list
]

ROOT_URLCONF = 'newwinetraining.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [BASE_DIR, 'templates'],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'newwinetraining.wsgi.application'


# Database
# https://docs.djangoproject.com/en/3.2/ref/settings/#databases

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.postgresql_psycopg2',
        'HOST': env('DATABASE_HOST'),
        'NAME': env('DATABASE_NAME'),
        'USER': env('DATABASE_USER'),
        'PASSWORD': env('DATABASE_PASS'),
        'PORT': env('DATABASE_PORT'),
    }
}


# Password validation
# https://docs.djangoproject.com/en/3.2/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
        'OPTIONS': {
            'min_length': 6,
        }
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/3.2/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'America/Los_Angeles'

USE_I18N = True

USE_L10N = True

USE_TZ = False


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/3.2/howto/static-files/

STATIC_URL = '/static/'

STATICFILES_DIRS = [
    BASE_DIR / "static",
]

# Default primary key field type
# https://docs.djangoproject.com/en/3.2/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'

#Custom User database for auth
AUTH_USER_MODEL = 'users.User'

LOGIN_URL = 'accounts/login'

LOGIN_REDIRECT_URL = '/'

#Setting up default phone number region for validation
PHONENUMBER_DEFAULT_REGION = 'US'

#Iommi hook to use project style

from iommi import Style, Asset
from iommi.style_bootstrap import bootstrap

#IOMMI_DEFAULT_STYLE = 'bulma' #base, test, bootstrap, bulma, foundation, semantic_ui, water, django_admin


IOMMI_DEFAULT_STYLE = Style(
    bootstrap,
    base_template='newwinetraining/templates/iommi/iommi_base.html',
    root__assets=dict(
        newwinetraining_sb_admin_2_css = Asset.css(attrs__href = STATIC_URL + 'css/sb-admin-2.min.css'),
        newwinetraining_custom_css = Asset.css(attrs__href = STATIC_URL + 'css/custom.css'),
        newwinetraining_sb_admin_2_js = Asset.js(attrs__src = STATIC_URL + 'js/sb-admin-2.min.js'),
    ),
)


#Disabling pycache for development environments
#if env('DEBUG') == True:
#    os.environ['PYTHONDONTWRITEBYTECODE'] = 1

#os.environ['PYTHONDONTWRITEBYTECODE'] = '1'

#dfdsfjlkdsjf()

#from thisdoesnotexistforsure import kaboom